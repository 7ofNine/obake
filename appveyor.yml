version: '{build}'

branches:
  except:
    - /pr\/.+/

environment:
  matrix:
    # - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019 Preview
    #   BUILD_TYPE: MSVC19_64
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      BUILD_TYPE: MSVC17_64

install:
- set PATH=C:\Miniconda36-x64\Scripts;%PATH%
- conda config --add channels conda-forge --force
- conda create -y --name piranha cmake boost-cpp
- call activate piranha

build_script:
- mkdir build
- cd build

- set MPPP_VERSION=0.14
- curl -fsS -o mppp.zip https://github.com/bluescarni/mppp/archive/v%MPPP_VERSION%.zip
- 7z x mppp.zip
- cd mppp-%MPPP_VERSION%
- mkdir build
- cd build
- if [%BUILD_TYPE%]==[MSVC19_64] cmake .. -G "Visual Studio 16 2019" -A x64 -DMPPP_WITH_MPFR=yes -DCMAKE_PREFIX_PATH=C:\Miniconda36-x64\envs\piranha -DCMAKE_INSTALL_PREFIX=C:\Miniconda36-x64\envs\piranha
- if [%BUILD_TYPE%]==[MSVC17_64] cmake .. -G "Visual Studio 15 2017" -A x64 -DMPPP_WITH_MPFR=yes -DCMAKE_PREFIX_PATH=C:\Miniconda36-x64\envs\piranha -DCMAKE_INSTALL_PREFIX=C:\Miniconda36-x64\envs\piranha
- cmake --build . --config Debug --target install
- cd ..
- cd ..

- if [%BUILD_TYPE%]==[MSVC19_64] cmake .. -G "Visual Studio 16 2019" -A x64 -DPIRANHA_BUILD_TESTS=yes -DPIRANHA_WITH_STACK_TRACES=YES
- if [%BUILD_TYPE%]==[MSVC17_64] cmake .. -G "Visual Studio 15 2017" -A x64 -DPIRANHA_BUILD_TESTS=yes -DPIRANHA_WITH_STACK_TRACES=YES
- cmake --build . --config Debug


test_script:
# NOTE: ensure the PATH variable contains the path to the piranha dll,
# otherwise the tests will fail to run.
- set PATH=%PATH%;%CD%\Debug
- ctest -V -C Debug

# Enable this to be able to login to the build worker. You can use the
# `remmina` program in Ubuntu, use the login information that the line below
# prints into the log.
# on_finish:
# - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
